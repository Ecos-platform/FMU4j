name: Build

on: [ push ]

jobs:

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        jvm-version: [ 8, 11 ]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK ${{matrix.jvm-version}}
        uses: actions/setup-java@v1
        with:
          java-version: ${{matrix.jvm-version}}

      - name: Build
        run: ./gradlew clean buildNative build
        shell: bash

      - uses: actions/upload-artifact@v2
        if: matrix.jvm-version == 8
        with:
          name: test-fmu-linux
          path: fmu-builder/build/generated/Identity.fmu

  test-external-linux:
    needs: [build-linux]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        jvm-version: [ 8 ]

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK ${{matrix.jvm-version}}
        uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.jvm-version}}
          distribution: 'adopt'

      - name: Download fmus
        uses: actions/download-artifact@v2
        with:
          name: test-fmu-linux
          path: fmu-builder/build/generated/

      - name: Download and run FMUchecker
        run: |
          wget https://github.com/modelica-tools/FMUComplianceChecker/releases/download/2.0.4/FMUChecker-2.0.4-linux64.zip
          7z x FMUChecker-2.0.4-linux64.zip && cd FMUChecker-2.0.4-linux64
          export LD_LIBRARY_PATH="${{env.JAVA_HOME}}/jre/lib/amd64/server:${LD_LIBRARY_PATH}"
          ./fmuCheck.linux64 ../fmu-builder/build/generated/Identity.fmu
        shell: bash
