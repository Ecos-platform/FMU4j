import org.gradle.internal.os.OperatingSystem

def os = OperatingSystem.current()
def buildDir = new File(projectDir, "build")
buildDir.mkdir()

task configureNative {
    doLast {
        exec {
            workingDir buildDir
            if (os.isWindows()) {
                commandLine 'cmd', '/c', 'cmake', '..', '-DCMAKE_BUILD_TYPE=Release', '-A', 'x64'
            } else if (os.isLinux()) {
                commandLine 'cmake', '..', '-DCMAKE_BUILD_TYPE=Release'
            }
        }
    }
}

task buildNative {
    doLast {
        exec {
            workingDir buildDir
            if (os.isWindows()) {
                commandLine 'cmd', '/c', 'cmake', '--build', '.', '--config', 'Release'
            } else if (os.linux) {
                commandLine 'cmake', '--build', '.'
            }
        }
        copy {

            from "$buildDir/bin"
            if (os.isWindows()) {
                into "${rootProject.file("fmu-builder/src/main/resources/binaries/win64")}"
            } else if (os.isLinux()) {
                into "${rootProject.file("fmu-builder/src/main/resources/binaries/linux64")}"
            }
        }
    }

    dependsOn 'configureNative'
}

task clean {
   doLast {
       if (buildDir.exists()) {
           buildDir.deleteDir()
       }
   }
}
